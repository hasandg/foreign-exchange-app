# Example Production Configuration
# Copy to application-production.yml and customize for your production environment

spring:
  profiles:
    active: production
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    hikari:
      maximum-pool-size: 50      # Higher connection pool for production
      minimum-idle: 20
  data:
    mongodb:
      uri: ${MONGODB_URI}
  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS}

conversion:
  exchange-rate-service:
    url: ${EXCHANGE_RATE_SERVICE_URL}
  batch:
    size: 10000                  # Higher batch size limit for production
    chunk-size: 500              # Larger chunks for better throughput
                                 # Production: Optimize for performance over error recovery
    skip-limit: 100              # Lower skip limit for production data quality
                                 # Production: Fail faster on data quality issues
    job:
      restart-enabled: true
      max-attempts: 5            # More retry attempts in production
    task-executor:
      core-pool-size: 8          # Production: More threads for high-performance servers
      max-pool-size: 16          # Production: Scale up for heavy loads
      queue-capacity: 500        # Larger queue for production workloads
      thread-name-prefix: "prod-batch-"
  csv:
    upload:
      dir: ${CSV_UPLOAD_DIR:/data/uploads}

logging:
  level:
    com.hasandag: INFO           # Production: Less verbose logging
    org.springframework.web: WARN
    org.hibernate.SQL: WARN 